# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/iam/v1/resource_policy_member.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'


descriptor_data = "\n*google/iam/v1/resource_policy_member.proto\x12\rgoogle.iam.v1\x1a\x1fgoogle/api/field_behavior.proto\"e\n\x14ResourcePolicyMember\x12&\n\x19iam_policy_name_principal\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12%\n\x18iam_policy_uid_principal\x18\x02 \x01(\tB\x03\xe0\x41\x03\x42\x87\x01\n\x11\x63om.google.iam.v1B\x19ResourcePolicyMemberProtoP\x01Z)cloud.google.com/go/iam/apiv1/iampb;iampb\xaa\x02\x13Google.Cloud.Iam.V1\xca\x02\x13Google\\Cloud\\Iam\\V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Iam
    module V1
      ResourcePolicyMember = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.iam.v1.ResourcePolicyMember").msgclass
    end
  end
end

#### Source proto file: google/iam/v1/resource_policy_member.proto ####
#
# // Copyright 2025 Google LLC
# //
# // Licensed under the Apache License, Version 2.0 (the "License");
# // you may not use this file except in compliance with the License.
# // You may obtain a copy of the License at
# //
# //     http://www.apache.org/licenses/LICENSE-2.0
# //
# // Unless required by applicable law or agreed to in writing, software
# // distributed under the License is distributed on an "AS IS" BASIS,
# // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# // See the License for the specific language governing permissions and
# // limitations under the License.
#
# syntax = "proto3";
#
# package google.iam.v1;
#
# import "google/api/field_behavior.proto";
#
# option csharp_namespace = "Google.Cloud.Iam.V1";
# option go_package = "cloud.google.com/go/iam/apiv1/iampb;iampb";
# option php_namespace = "Google\\Cloud\\Iam\\V1";
# option java_multiple_files = true;
# option java_outer_classname = "ResourcePolicyMemberProto";
# option java_package = "com.google.iam.v1";
#
# // Output-only policy member strings of a Google Cloud resource's built-in
# // identity.
# message ResourcePolicyMember {
#   // IAM policy binding member referring to a Google Cloud resource by
#   // user-assigned name (https://google.aip.dev/122). If a resource is deleted
#   // and recreated with the same name, the binding will be applicable to the new
#   // resource.
#   //
#   // Example:
#   // `principal://parametermanager.googleapis.com/projects/12345/name/locations/us-central1-a/parameters/my-parameter`
#   string iam_policy_name_principal = 1
#       [(google.api.field_behavior) = OUTPUT_ONLY];
#
#   // IAM policy binding member referring to a Google Cloud resource by
#   // system-assigned unique identifier (https://google.aip.dev/148#uid). If a
#   // resource is deleted and recreated with the same name, the binding will not
#   // be applicable to the new resource
#   //
#   // Example:
#   // `principal://parametermanager.googleapis.com/projects/12345/uid/locations/us-central1-a/parameters/a918fed5`
#   string iam_policy_uid_principal = 2
#       [(google.api.field_behavior) = OUTPUT_ONLY];
# }
