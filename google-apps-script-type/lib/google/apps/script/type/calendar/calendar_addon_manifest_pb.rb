# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/script/type/calendar/calendar_addon_manifest.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/apps/script/type/extension_point_pb'


descriptor_data = "\n>google/apps/script/type/calendar/calendar_addon_manifest.proto\x12 google.apps.script.type.calendar\x1a\x1fgoogle/api/field_behavior.proto\x1a-google/apps/script/type/extension_point.proto\"\xbf\x04\n\x15\x43\x61lendarAddOnManifest\x12I\n\x10homepage_trigger\x18\x06 \x01(\x0b\x32/.google.apps.script.type.HomepageExtensionPoint\x12Q\n\x13\x63onference_solution\x18\x03 \x03(\x0b\x32\x34.google.apps.script.type.calendar.ConferenceSolution\x12$\n\x1c\x63reate_settings_url_function\x18\x05 \x01(\t\x12T\n\x12\x65vent_open_trigger\x18\n \x01(\x0b\x32\x38.google.apps.script.type.calendar.CalendarExtensionPoint\x12V\n\x14\x65vent_update_trigger\x18\x0b \x01(\x0b\x32\x38.google.apps.script.type.calendar.CalendarExtensionPoint\x12\x61\n\x14\x63urrent_event_access\x18\x0c \x01(\x0e\x32\x43.google.apps.script.type.calendar.CalendarAddOnManifest.EventAccess\"Q\n\x0b\x45ventAccess\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\x0c\n\x08METADATA\x10\x01\x12\x08\n\x04READ\x10\x03\x12\t\n\x05WRITE\x10\x04\x12\x0e\n\nREAD_WRITE\x10\x05\"p\n\x12\x43onferenceSolution\x12\x1f\n\x12on_create_function\x18\x01 \x01(\tB\x03\xe0\x41\x02\x12\x0f\n\x02id\x18\x04 \x01(\tB\x03\xe0\x41\x02\x12\x11\n\x04name\x18\x05 \x01(\tB\x03\xe0\x41\x02\x12\x15\n\x08logo_url\x18\x06 \x01(\tB\x03\xe0\x41\x02\"3\n\x16\x43\x61lendarExtensionPoint\x12\x19\n\x0crun_function\x18\x01 \x01(\tB\x03\xe0\x41\x02\x42\xf2\x01\n$com.google.apps.script.type.calendarB\x1a\x43\x61lendarAddOnManifestProtoP\x01Z?google.golang.org/genproto/googleapis/apps/script/type/calendar\xaa\x02 Google.Apps.Script.Type.Calendar\xca\x02 Google\\Apps\\Script\\Type\\Calendar\xea\x02$Google::Apps::Script::Type::Calendarb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.apps.script.type.HomepageExtensionPoint", "google/apps/script/type/extension_point.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Apps
    module Script
      module Type
        module Calendar
          CalendarAddOnManifest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.apps.script.type.calendar.CalendarAddOnManifest").msgclass
          CalendarAddOnManifest::EventAccess = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.apps.script.type.calendar.CalendarAddOnManifest.EventAccess").enummodule
          ConferenceSolution = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.apps.script.type.calendar.ConferenceSolution").msgclass
          CalendarExtensionPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.apps.script.type.calendar.CalendarExtensionPoint").msgclass
        end
      end
    end
  end
end
